monitor = eDP-1, 2256x1504@59.99900, 0x0, 1.333333
monitor = DP-1, 1920x1080@60.00000, 0x-1080, 1
monitor = DP-2, 1920x1080@60.00000, 0x-1080, 1

xwayland {
  force_zero_scaling = true
}

$terminal = kitty
$fileManager = thunar
$menu = tofi-drun | xargs hyprctl dispatch exec --
$browser = google-chrome-stable

exec-once = dunst &
exec-once = nm-applet &
exec-once = swaybg -i ~/.config/hypr/scripts/resources/anya-taylor-joy-olga-of-the-birch-forest-the-northman-2022-4000x2297-7853.jpg -m fill &
# exec-once = waybar &
# exec-once = ashell &
exec-once = wl-paste --type text --watch cliphist store &
exec-once = wl-paste --type image --watch cliphist stor &

exec-once = bash ~/.config/hypr/scripts/startup

exec-once = [workspace 9 silent] $browser
exec-once = [workspace 10 silent] $terminal bash ~/.config/hypr/scripts/tmux-void
# exec-once = [workspace special:everything silent] $terminal bash ~/.config/hypr/scripts/tmux-everything
exec-once = [workspace special:ssh silent] $terminal

exec-once = thunar --daemon
exec-once = extramaus

exec-once = bash ~/.config/hypr/scripts/battery-low
exec-once = bash ~/.config/hypr/scripts/battery-status

# exec-once = hypridle

env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24

general { 
  gaps_in = 4
  gaps_out = 8
  border_size = 0
  col.inactive_border = 0xff000000
  col.active_border = 0xffbd93f9
  resize_on_border = false 
  allow_tearing = true
  layout = dwindle
}

decoration {
  rounding = 0
  dim_special = 0
  blur {
    enabled = true
  }
}

animations {
  enabled = false
  # first_launch_animation = false

  bezier = overshot, 0.13, 0.99, 0.29, 1.1
  animation = windows, 1, 4, overshot, slide
  animation = windowsOut, 1, 5, default, popin 80%
  animation = border, 1, 5, default
  animation = fade, 1, 8, default
  animation = workspaces, 1, 6, overshot, slide
}

dwindle {
  pseudotile = true
  preserve_split = true
}

master {
  new_status = master
}

misc { 
  disable_hyprland_logo = true
  font_family = FiraCode Nerd Font
  splash_font_family = FiraCode Nerd Font
  force_default_wallpaper = 1
  vrr = 1
}

input {
  kb_layout = us
  follow_mouse = 1
  sensitivity = 0.4
  focus_on_close = 1
  touchpad {
    natural_scroll = true
    middle_button_emulation = true
  }
  touchdevice {
      enabled = false
    }
}

gestures {
  workspace_swipe_touch = true
  gesture = 3, horizontal, workspace
  gesture = 3, up, fullscreen
  gesture = 3, down, close
}

device {
  name = epic-mouse-v1
    sensitivity = -0.5
}


binds {
  allow_workspace_cycles = true
  workspace_center_on = 1
}

cursor {
  zoom_factor = 1
}

$mainMod = ALT

bindel = $mainMod, Q, killactive,
bind = SUPER SHIFT, Q, exit,
bind = $mainMod, P, exec, $menu
bind = $mainMod, R, pseudo,
bind = $mainMod, V, togglefloating,
bind = $mainMod, T, togglesplit,
bind = $mainMod, M, fullscreen
bind = SUPER SHIFT, L, exec, hyprlock
bind = SUPER SHIFT, R, exec, systemctl reboot
bind = SUPER SHIFT, S, exec, systemctl suspend
bind = SUPER SHIFT, P, exec, ~/.config/hypr/scripts/shutdown
bind = , Print, exec, ~/.config/hypr/scripts/screenshots.sh
# bind = , Print, exec, adb shell input keyevent 25 & adb shell input keyevent 26
bind = SHIFT, Print, exec, ~/.config/hypr/scripts/ocr.sh
bind = , Pause, exec, playerctl --player=spotify play-pause
bind = , XF86AudioPrev, exec, playerctl --player=spotify previous
bind = , XF86AudioNext, exec, playerctl --player=spotify next

bind = , XF86PowerOff, exec, hyprctl dispatch dpms toggle
# bind = , XF86PowerOff, exec, adb shell input keyevent 26
bind = SUPER, XF86PowerOff, exec, hyprctl keyword input:touchdevice:enabled true
bind = SUPER SHIFT, XF86PowerOff, exec, hyprctl keyword input:touchdevice:enabled false
bind = $mainMod, XF86PowerOff, exec, adb shell input keyevent 26
# bind = , XF86PowerOff, exec, hyprctl keyword monitor eDP-1,preferred,auto,1.333333,transform,2
# bind = SHIFT, XF86PowerOff, exec, hyprctl keyword monitor eDP-1,preferred,auto,1.333333,transform,0

bindel = SUPER, G, swapnext
bind = SUPER SHIFT, G, exec, ~/.config/hypr/scripts/steam
bind = SUPER, M, exec, [workspace 5] $browser --app=https://web.whatsapp.com

bind = SUPER, V, exec, cliphist list | rofi -dmenu  | cliphist decode | wl-copy
bind = SUPER, O, exec, echo -e "spreadsheets\npresentation\nforms\ndocument" | rofi -dmenu | xargs -I{} google-chrome-stable --app=https://docs.google.com/{}/ &> /dev/null &
bind = SUPER SHIFT, O, exec, echo -e "word\npowerpoint\nexcel" | rofi -dmenu | xargs -I{} google-chrome-stable --app=https://{}.cloud.microsoft/ &> /dev/null &
bind = $mainMod, RETURN, exec, $terminal
bind = SUPER SHIFT, W, exec, brave
bind = SUPER, W, exec, $browser

# Move focus with mainMod + arrow keys
binde = $mainMod, H, movefocus, l
binde = $mainMod, L, movefocus, r
binde = $mainMod, K, movefocus, u
binde = $mainMod, J, movefocus, d

# sets repeatable binds for resizing the active window
binde = $mainMod SHIFT, L, resizeactive, 40 0
binde = $mainMod SHIFT, H, resizeactive, -40 0
binde = $mainMod SHIFT, K, resizeactive, 0 -40
binde = $mainMod SHIFT, J, resizeactive, 0 40

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# bind = SUPER, RETURN, togglespecialworkspace, everything
bind = SUPER, RETURN, togglespecialworkspace, ssh

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Cycle between the current and the previous workspaces
bind = SUPER, Tab, workspace, previous

# Laptop multimedia keys for volume and LCD brightness
bindel = , XF86AudioRaiseVolume, exec, ~/.config/hypr/scripts/volume --inc 
bindel = , XF86AudioLowerVolume, exec, ~/.config/hypr/scripts/volume --dec 
# bindel = , XF86AudioRaiseVolume, exec, adb shell input keyevent 24
# bindel = , XF86AudioLowerVolume, exec, adb shell input keyevent 25
bindel = , XF86AudioMicMute, exec, ~/.config/hypr/scripts/volume --toggle-mic 
bindel = , XF86AudioMute, exec, ~/.config/hypr/scripts/volume --toggle
bindel = , XF86MonBrightnessUp, exec, ~/.config/hypr/scripts/backlight --inc 
bindel = , XF86MonBrightnessDown, exec, ~/.config/hypr/scripts/backlight --dec
# bindel = , XF86MonBrightnessUp, exec, adb shell input keyevent 221
# bindel = , XF86MonBrightnessDown, exec, adb shell input keyevent 220


windowrule = suppressevent maximize, class:.*

windowrule = workspace: 1, class:code
windowrule = workspace: 1, class:dev.zed.Zed
windowrule = workspace: 1, class:jetbrains-idea-ce
windowrule = workspace: 1, class:jetbrains-webstorm
windowrule = workspace: 1, class:cursor
windowrule = workspace: 1, class:Emulator
# windowrule = workspace: 2, class:mpv

windowrule = float, class:(xfce-polkit)
windowrule = float, class:(nwg-look)
windowrule = float, class:(timeshift-gtk)
windowrule = float, class:(cheese)
windowrule = float, class:(org.gnome.DiskUtility)
windowrule = float, class:(org.pwmt.zathura)
windowrule = float, class:(org.raspberrypi.rpi-imager)
windowrule = float, class:(com.network.manager)
windowrule = float, class:(com.saivert.pwvucontrol)
windowrule = float, class:(Emulator)

# windowrule = fullscreen, class:(mpv)

windowrule = float, class:(org.nomacs.ImageLounge)
windowrule = size 1000 800, class:(org.nomacs.ImageLounge)

windowrule = float, class:(blueman-manager)

bind = CTRL $mainMod SHIFT, K, movecurrentworkspacetomonitor, u
bind = CTRL $mainMod SHIFT, J, movecurrentworkspacetomonitor, d
